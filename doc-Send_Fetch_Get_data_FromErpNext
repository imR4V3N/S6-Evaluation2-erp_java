package mg.erp.services;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.springframework.http.*;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

@Service
public class ERPNextService {

    private final RestTemplate restTemplate = new RestTemplate();
    private final ObjectMapper mapper = new ObjectMapper();

    // 1. Envoyer des donn√©es (POST ou PUT)
    public JsonNode sendToERPNext(String endpoint, JsonNode payload, String sid) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Cookie", "sid=" + sid);
        headers.setContentType(MediaType.APPLICATION_JSON);

        HttpEntity<String> entity = new HttpEntity<>(payload.toString(), headers);
        ResponseEntity<JsonNode> response = restTemplate.exchange(endpoint, HttpMethod.POST, entity, JsonNode.class);
        return response.getBody();
    }

    // 2. Recevoir avec param√®tres (POST avec body)
    public JsonNode fetchFromERPNextWithParams(String endpoint, JsonNode payload, String sid) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Cookie", "sid=" + sid);
        headers.setContentType(MediaType.APPLICATION_JSON);

        HttpEntity<String> entity = new HttpEntity<>(payload.toString(), headers);
        ResponseEntity<JsonNode> response = restTemplate.exchange(endpoint, HttpMethod.POST, entity, JsonNode.class);
        return response.getBody();
    }

    // 3. GET simple sans donn√©es envoy√©es
    public JsonNode getFromERPNext(String endpoint, String sid) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Cookie", "sid=" + sid);
        headers.setContentType(MediaType.APPLICATION_JSON);

        HttpEntity<Void> entity = new HttpEntity<>(headers);
        ResponseEntity<JsonNode> response = restTemplate.exchange(endpoint, HttpMethod.GET, entity, JsonNode.class);
        return response.getBody();
    }

    // Exemple de traitement de la r√©ponse
    public void exempleUsage(String sid) {
        // Exemple 1 : cr√©er un nouvel Item
        ObjectNode data = mapper.createObjectNode();
        data.put("doctype", "Item");
        data.put("item_code", "ARTICLE-001");
        data.put("item_name", "Chaise en bois");

        JsonNode createResponse = sendToERPNext(
                "http://erpnext.localhost:8000/api/resource/Item",
                data,
                sid
        );

        if (createResponse.has("data")) {
            String createdName = createResponse.path("data").path("name").asText();
            System.out.println("‚úÖ Article cr√©√© : " + createdName);
        } else {
            System.err.println("‚ùå Erreur cr√©ation : " + createResponse);
        }

        // Exemple 2 : r√©cup√©rer la liste des Items
        ObjectNode filters = mapper.createObjectNode();
        filters.put("doctype", "Item");
        JsonNode listResponse = fetchFromERPNextWithParams(
                "http://erpnext.localhost:8000/api/method/frappe.client.get_list",
                filters,
                sid
        );

        System.out.println("üìÑ Liste des items :");
        listResponse.path("message").forEach(item -> {
            System.out.println(" - " + item.path("name").asText());
        });

        // Exemple 3 : GET direct pour r√©cup√©rer un Item
        JsonNode getResponse = getFromERPNext(
                "http://erpnext.localhost:8000/api/resource/Item/ARTICLE-001",
                sid
        );

        if (getResponse.has("data")) {
            String itemName = getResponse.path("data").path("item_name").asText();
            System.out.println("üì¶ D√©tail item : " + itemName);
        }
    }
}
